package aucbrowse

import "curs1_boilerplate/views/pages"
import "curs1_boilerplate/model"

templ browseAuctionsFilters(categories []model.Category) {
<div
    class="w-75"
    novalidate
>   
    <div class="mb-3">
        <label for="categorySelect" class="form-label">Category</label>
        <select form="browseAuctionsForm" class="form-select" id="categorySelect" name="categoryName">
            <option value="" selected>Any</option>
            for _, cat := range categories {
                <option value={cat.Name}>{cat.Name}</option>
            }
        </select>
    </div> 

    <div class="mb-3">
        <label for="orderBySelect" class="form-label">Order Auctions By</label>
        <select form="browseAuctionsForm" class="form-select" id="orderBySelect" name="orderBy">
            <option value="Product Name">Product Name</option>
            <option value="Created At" selected>Creation Date</option>
        </select>
    </div>

    <div class="mb-3">
        <label for="orderSelect">Order Auctions In</label>
        <select form="browseAuctionsForm" class="form-select" id="orderSelect" name="reverse">
            <option value="false">Ascending Order</option>
            <option value="true" selected>Descending Order</option>
        </select>
    </div>
</div>
}

templ browseAuctionsContent(viewModel *ViewModel) {
    <div class="d-flex h-100">
        <div class="d-flex flex-column align-items-center flex-basis-20 bg-dark-subtle" id="filterContainer">
            <p class="fs-2 text-center">Filters</p>
            @browseAuctionsFilters(viewModel.categories)
        </div>

        <div class="d-flex flex-column flex-basis-80 align-items-center row-gap-3" id="auctionsList">
            if viewModel.alert != nil {
                @viewModel.alert
            } else {
                @viewModel.auctionList
            }
        </div>
    </div>
}

templ BrowseAuctions(viewModel *ViewModel, nav templ.Component) {
    @pages.Common(nav, browseAuctionsContent(viewModel))
}