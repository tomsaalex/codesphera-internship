// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package auccreate

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "curs1_boilerplate/views/pages"

func auctionCreationContent(viewModel *ViewModel) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<form id=\"auctionForm\" class=\"needs-validation\" hx-post=\"/products\" hx-swap=\"outerHTML\" novalidate><div class=\"mb-3\"><label for=\"productName\" class=\"form-label\">Product Name</label> <input type=\"text\" class=\"form-control\" id=\"productName\" name=\"product_name\" required></div><div class=\"mb-3\"><label for=\"productDescription\" class=\"form-label\">Product Description</label> <textarea class=\"form-control\" id=\"productDescription\" name=\"product_description\" rows=\"3\" required></textarea></div><div class=\"mb-3\"><label for=\"status\" class=\"form-label\">Status</label> <select class=\"form-select\" id=\"status\" name=\"status\" required><option value=\"Ongoing\">Ongoing</option> <option value=\"Finished\">Finished</option></select></div><div class=\"mb-3\"><label for=\"mode\" class=\"form-label\">Mode</label> <select class=\"form-select\" id=\"mode\" name=\"mode\" required _=\"on change\n                if my value is &#39;Manual&#39;\n                    add .d-none to #targetPriceGroup\n                else\n                    remove .d-none from #targetPriceGroup\n            \"><option value=\"Manual\">Manual</option> <option value=\"Price Met\">Price Met</option></select></div><div class=\"mb-3\"><label for=\"startingPrice\" class=\"form-label\">Starting Price</label> <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"startingPrice\" name=\"starting_price\" required></div><div id=\"targetPriceGroup\" class=\"mb-3 d-none\"><label for=\"targetPrice\" class=\"form-label\">Target Price</label> <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"targetPrice\" name=\"target_price\" required></div><button type=\"submit\" class=\"btn btn-primary\">Add Product</button></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func AuctionCreationPage(viewModel *ViewModel, nav templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = pages.Common(nav, auctionCreationContent(viewModel)).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
